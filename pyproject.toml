[tool.poetry]
name = "morphml"
version = "0.1.0"
description = "Production-grade Neural Architecture Search framework with distributed optimization"
authors = ["Eshan Roy <eshanized@proton.me>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/TIVerse/MorphML"
repository = "https://github.com/TIVerse/MorphML"
keywords = ["neural-architecture-search", "automl", "deep-learning", "optimization"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[tool.poetry.dependencies]
python = "^3.10"
numpy = "^1.24.0"
scipy = "^1.10.0"
networkx = "^3.1"
pydantic = "^2.0.0"
click = "^8.1.0"
rich = "^13.4.0"
pyyaml = "^6.0"
tqdm = "^4.65.0"
matplotlib = "^3.7.0"
seaborn = "^0.12.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.0"
pytest-cov = "^4.1.0"
black = "^23.3.0"
ruff = "^0.0.270"
mypy = "^1.3.0"
pre-commit = "^3.3.0"
ipython = "^8.14.0"
jupyter = "^1.0.0"

[tool.poetry.scripts]
morphml = "morphml.cli.main:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "networkx.*",
    "scipy.*",
    "matplotlib.*",
    "seaborn.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=morphml --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["morphml"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
